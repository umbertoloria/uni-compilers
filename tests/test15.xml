<?xml version="1.0" encoding="UTF-8" standalone="no"?><ProgramOp><Procs><ProcOp><Id name="in_str"/><ReturnTypes><Type type="string"/></ReturnTypes><ProcBodyOp><VarDecls><VarDeclOp><Type type="string"/><IdInitOps><IdInitOp><Id name="res"/></IdInitOp></IdInitOps></VarDeclOp></VarDecls><ReturnExprList><Id name="res"/></ReturnExprList><BodyOp><ReadlnOp><Ids><Id name="res"/></Ids></ReadlnOp></BodyOp></ProcBodyOp></ProcOp><ProcOp><Id name="main"/><ReturnTypes><Type type="int"/></ReturnTypes><ProcBodyOp><VarDecls><VarDeclOp><Type type="string"/><IdInitOps><IdInitOp><Id name="a"/></IdInitOp><IdInitOp><Id name="b"/></IdInitOp></IdInitOps></VarDeclOp></VarDecls><ReturnExprList><IntConst const="0"/></ReturnExprList><BodyOp><WriteOp><ExprList><StringConst const="Fornisci una stringa: "/></ExprList></WriteOp><AssignOp><Ids><Id name="a"/></Ids><ExprList><CallProcOp><Id name="in_str"/></CallProcOp></ExprList></AssignOp><WriteOp><ExprList><StringConst const="Fornisci un'altra stringa: "/></ExprList></WriteOp><AssignOp><Ids><Id name="b"/></Ids><ExprList><CallProcOp><Id name="in_str"/></CallProcOp></ExprList></AssignOp><WriteOp><ExprList><StringConst const="Input: "/><Id name="a"/><StringConst const=", "/><Id name="b"/><StringConst const="\n"/></ExprList></WriteOp><IfOp><LTOp><Id name="a"/><Id name="b"/></LTOp><Then><BodyOp><WriteOp><ExprList><StringConst const="a &lt; b"/></ExprList></WriteOp></BodyOp></Then><Elifs><ElifOp><EQOp><Id name="a"/><Id name="b"/></EQOp><BodyOp><WriteOp><ExprList><StringConst const="a == b"/></ExprList></WriteOp></BodyOp></ElifOp><ElifOp><GTOp><Id name="a"/><Id name="b"/></GTOp><BodyOp><WriteOp><ExprList><StringConst const="a &gt; b"/></ExprList></WriteOp></BodyOp></ElifOp></Elifs><Else><BodyOp><WriteOp><ExprList><StringConst const="dead code"/></ExprList></WriteOp></BodyOp></Else></IfOp></BodyOp></ProcBodyOp></ProcOp></Procs></ProgramOp>