<?xml version="1.0" encoding="UTF-8" standalone="no"?><ProgramOp><Procs><ProcOp><Id name="main"/><ReturnTypes><Type type="int"/></ReturnTypes><ProcBodyOp><VarDecls><VarDeclOp><Type type="int"/><IdInitOps><IdInitOp><Id name="a"/></IdInitOp><IdInitOp><Id name="b"/></IdInitOp></IdInitOps></VarDeclOp><VarDeclOp><Type type="bool"/><IdInitOps><IdInitOp><Id name="cond"/></IdInitOp></IdInitOps></VarDeclOp></VarDecls><ReturnExprList><IntConst const="0"/></ReturnExprList><BodyOp><WriteOp><ExprList><StringConst const="Fornisci un numero: "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="a"/></Ids></ReadlnOp><WriteOp><ExprList><StringConst const="Fornisci un altro numero: "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="b"/></Ids></ReadlnOp><IfOp><GTOp><Id name="a"/><Id name="b"/></GTOp><Then><BodyOp><WriteOp><ExprList><StringConst const="Il primo è maggiore\n"/></ExprList></WriteOp></BodyOp></Then><Else><BodyOp><WriteOp><ExprList><StringConst const="Il secondo è maggiore\n"/></ExprList></WriteOp></BodyOp></Else></IfOp><IfOp><OrOp><GTOp><Id name="a"/><IntConst const="0"/></GTOp><GTOp><Id name="b"/><IntConst const="0"/></GTOp></OrOp><Then><BodyOp><WriteOp><ExprList><StringConst const="Almeno un numero è positivo\n"/></ExprList></WriteOp></BodyOp></Then><Else><BodyOp><WriteOp><ExprList><StringConst const="Tutti i numeri sono negativi\n"/></ExprList></WriteOp></BodyOp></Else></IfOp><AssignOp><Ids><Id name="cond"/></Ids><ExprList><AndOp><GTOp><Id name="a"/><IntConst const="0"/></GTOp><GTOp><Id name="b"/><IntConst const="0"/></GTOp></AndOp></ExprList></AssignOp><IfOp><EQOp><NotOp><Id name="cond"/></NotOp><False/></EQOp><Then><BodyOp><WriteOp><ExprList><StringConst const="Tutti i numeri sono positivi\n"/></ExprList></WriteOp></BodyOp></Then><Else><BodyOp><WriteOp><ExprList><StringConst const="Almeno un numero è negativo\n"/></ExprList></WriteOp></BodyOp></Else></IfOp><IfOp><GEOp><Id name="a"/><Id name="b"/></GEOp><Then><BodyOp><WriteOp><ExprList><StringConst const="Il primo numero è maggiore o uguale del secondo\n"/></ExprList></WriteOp></BodyOp></Then><Elifs><ElifOp><LEOp><Id name="a"/><Id name="b"/></LEOp><BodyOp><WriteOp><ExprList><StringConst const="Il secondo numero non è minore o uguale del primo, quindi è maggiore\n"/></ExprList></WriteOp></BodyOp></ElifOp></Elifs></IfOp><IfOp><LTOp><Id name="a"/><FloatConst const="3.14159"/></LTOp><Then><BodyOp><WriteOp><ExprList><StringConst const="Il primo numero è minore di Pi greco\n"/></ExprList></WriteOp></BodyOp></Then></IfOp></BodyOp></ProcBodyOp></ProcOp></Procs></ProgramOp>