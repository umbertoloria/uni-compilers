<?xml version="1.0" encoding="UTF-8" standalone="no"?><ProgramOp><VarDecls><VarDeclOp><Type type="int"/><IdInitOps><IdInitOp><Id name="option"/></IdInitOp></IdInitOps></VarDeclOp></VarDecls><Procs><ProcOp><Id name="sommaNumeri"/><ProcBodyOp><VarDecls><VarDeclOp><Type type="int"/><IdInitOps><IdInitOp><Id name="a"/></IdInitOp><IdInitOp><Id name="b"/></IdInitOp></IdInitOps></VarDeclOp></VarDecls><BodyOp><WriteOp><ExprList><StringConst const="Fornisci il primo addendo&gt; "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="a"/></Ids></ReadlnOp><WriteOp><ExprList><StringConst const="Fornisci il secondo addendo&gt; "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="b"/></Ids></ReadlnOp><WriteOp><ExprList><StringConst const="Somma: "/><PlusOp><Id name="a"/><Id name="b"/></PlusOp><StringConst const="\n"/></ExprList></WriteOp></BodyOp></ProcBodyOp></ProcOp><ProcOp><Id name="moltiplicaNumeri"/><ProcBodyOp><VarDecls><VarDeclOp><Type type="int"/><IdInitOps><IdInitOp><Id name="a"/></IdInitOp><IdInitOp><Id name="b"/></IdInitOp><IdInitOp><Id name="res"/><IntConst const="0"/></IdInitOp><IdInitOp><Id name="i"/></IdInitOp></IdInitOps></VarDeclOp></VarDecls><BodyOp><WriteOp><ExprList><StringConst const="Fornisci il primo fattore&gt; "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="a"/></Ids></ReadlnOp><WriteOp><ExprList><StringConst const="Fornisci il secondo fattore&gt; "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="b"/></Ids></ReadlnOp><AssignOp><Ids><Id name="i"/></Ids><ExprList><IntConst const="0"/></ExprList></AssignOp><WhileOp><LTOp><Id name="i"/><Id name="b"/></LTOp><IterStmts><BodyOp><AssignOp><Ids><Id name="res"/></Ids><ExprList><PlusOp><Id name="res"/><Id name="a"/></PlusOp></ExprList></AssignOp><AssignOp><Ids><Id name="i"/></Ids><ExprList><PlusOp><Id name="i"/><IntConst const="1"/></PlusOp></ExprList></AssignOp></BodyOp></IterStmts></WhileOp><WriteOp><ExprList><StringConst const="Moltiplicazione: "/><Id name="res"/><StringConst const="\n"/></ExprList></WriteOp></BodyOp></ProcBodyOp></ProcOp><ProcOp><Id name="dividiNaturali"/><ProcBodyOp><VarDecls><VarDeclOp><Type type="int"/><IdInitOps><IdInitOp><Id name="a"/></IdInitOp><IdInitOp><Id name="b"/></IdInitOp></IdInitOps></VarDeclOp></VarDecls><BodyOp><WriteOp><ExprList><StringConst const="Fornisci il dividendo&gt; "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="a"/></Ids></ReadlnOp><WriteOp><ExprList><StringConst const="Fornisci il divisore&gt; "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="b"/></Ids></ReadlnOp><WriteOp><ExprList><StringConst const="Rapporto: "/><DivOp><Id name="a"/><Id name="b"/></DivOp><StringConst const="\n"/></ExprList></WriteOp></BodyOp></ProcBodyOp></ProcOp><ProcOp><Id name="elevaAPotenza"/><ProcBodyOp><VarDecls><VarDeclOp><Type type="int"/><IdInitOps><IdInitOp><Id name="a"/></IdInitOp><IdInitOp><Id name="b"/></IdInitOp><IdInitOp><Id name="res"/><IntConst const="1"/></IdInitOp><IdInitOp><Id name="i"/></IdInitOp></IdInitOps></VarDeclOp></VarDecls><BodyOp><WriteOp><ExprList><StringConst const="Fornisci la base&gt; "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="a"/></Ids></ReadlnOp><WriteOp><ExprList><StringConst const="Fornisci l'esponente&gt; "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="b"/></Ids></ReadlnOp><AssignOp><Ids><Id name="i"/></Ids><ExprList><IntConst const="0"/></ExprList></AssignOp><WhileOp><LTOp><Id name="i"/><Id name="b"/></LTOp><IterStmts><BodyOp><AssignOp><Ids><Id name="res"/></Ids><ExprList><TimesOp><Id name="res"/><Id name="a"/></TimesOp></ExprList></AssignOp><AssignOp><Ids><Id name="i"/></Ids><ExprList><PlusOp><Id name="i"/><IntConst const="1"/></PlusOp></ExprList></AssignOp></BodyOp></IterStmts></WhileOp><WriteOp><ExprList><StringConst const="Moltiplicazione: "/><Id name="res"/><StringConst const="\n"/></ExprList></WriteOp></BodyOp></ProcBodyOp></ProcOp><ProcOp><Id name="calcolareSuccessioneFibonacci"/><ProcBodyOp><VarDecls><VarDeclOp><Type type="int"/><IdInitOps><IdInitOp><Id name="n"/></IdInitOp><IdInitOp><Id name="i"/></IdInitOp></IdInitOps></VarDeclOp><VarDeclOp><Type type="int"/><IdInitOps><IdInitOp><Id name="a"/></IdInitOp><IdInitOp><Id name="b"/></IdInitOp></IdInitOps></VarDeclOp></VarDecls><BodyOp><WriteOp><ExprList><StringConst const="Fornisci quanti numeri di Fibonacci calcolare&gt; "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="n"/></Ids></ReadlnOp><IfOp><GEOp><Id name="n"/><IntConst const="0"/></GEOp><Then><BodyOp><WriteOp><ExprList><StringConst const="Fibonacci di 0 = 0\n"/></ExprList></WriteOp><WriteOp><ExprList><StringConst const="Fibonacci di 1 = 1\n"/></ExprList></WriteOp><AssignOp><Ids><Id name="a"/></Ids><ExprList><IntConst const="0"/></ExprList></AssignOp><AssignOp><Ids><Id name="b"/></Ids><ExprList><IntConst const="1"/></ExprList></AssignOp><AssignOp><Ids><Id name="i"/></Ids><ExprList><IntConst const="2"/></ExprList></AssignOp><WhileOp><LEOp><Id name="i"/><Id name="n"/></LEOp><IterStmts><BodyOp><AssignOp><Ids><Id name="b"/></Ids><ExprList><PlusOp><Id name="b"/><Id name="a"/></PlusOp></ExprList></AssignOp><AssignOp><Ids><Id name="a"/></Ids><ExprList><MinusOp><Id name="b"/><Id name="a"/></MinusOp></ExprList></AssignOp><WriteOp><ExprList><StringConst const="Fibonacci di "/><Id name="i"/><StringConst const=" = "/><Id name="b"/><StringConst const="\n"/></ExprList></WriteOp><AssignOp><Ids><Id name="i"/></Ids><ExprList><PlusOp><Id name="i"/><IntConst const="1"/></PlusOp></ExprList></AssignOp></BodyOp></IterStmts></WhileOp></BodyOp></Then></IfOp></BodyOp></ProcBodyOp></ProcOp><ProcOp><Id name="menu"/><ProcBodyOp><BodyOp><WriteOp><ExprList><StringConst const="Seleziona l'operazione che desideri eseguire\n\n"/></ExprList></WriteOp><WriteOp><ExprList><StringConst const="[0] sommare due numeri\n"/></ExprList></WriteOp><WriteOp><ExprList><StringConst const="[1] moltiplicare due numeri\n"/></ExprList></WriteOp><WriteOp><ExprList><StringConst const="[2] dividere due numeri naturali\n"/></ExprList></WriteOp><WriteOp><ExprList><StringConst const="[3] elevare a potenza un numero per una base\n"/></ExprList></WriteOp><WriteOp><ExprList><StringConst const="[4] calcolare la successione di Fibonacci\n"/></ExprList></WriteOp><WriteOp><ExprList><StringConst const="[*] ...uscire\n\n"/></ExprList></WriteOp><WriteOp><ExprList><StringConst const="&gt; "/></ExprList></WriteOp><ReadlnOp><Ids><Id name="option"/></Ids></ReadlnOp></BodyOp></ProcBodyOp></ProcOp><ProcOp><Id name="main"/><ReturnTypes><Type type="int"/></ReturnTypes><ProcBodyOp><ReturnExprList><IntConst const="0"/></ReturnExprList><BodyOp><CallProcStatOp><Id name="menu"/></CallProcStatOp><WhileOp><AndOp><LEOp><IntConst const="0"/><Id name="option"/></LEOp><LEOp><Id name="option"/><IntConst const="4"/></LEOp></AndOp><IterStmts><BodyOp><IfOp><EQOp><Id name="option"/><IntConst const="0"/></EQOp><Then><BodyOp><CallProcStatOp><Id name="sommaNumeri"/></CallProcStatOp></BodyOp></Then><Elifs><ElifOp><EQOp><Id name="option"/><IntConst const="1"/></EQOp><BodyOp><CallProcStatOp><Id name="moltiplicaNumeri"/></CallProcStatOp></BodyOp></ElifOp><ElifOp><EQOp><Id name="option"/><IntConst const="2"/></EQOp><BodyOp><CallProcStatOp><Id name="dividiNaturali"/></CallProcStatOp></BodyOp></ElifOp><ElifOp><EQOp><Id name="option"/><IntConst const="3"/></EQOp><BodyOp><CallProcStatOp><Id name="elevaAPotenza"/></CallProcStatOp></BodyOp></ElifOp><ElifOp><EQOp><Id name="option"/><IntConst const="4"/></EQOp><BodyOp><CallProcStatOp><Id name="calcolareSuccessioneFibonacci"/></CallProcStatOp></BodyOp></ElifOp></Elifs></IfOp><WriteOp><ExprList><StringConst const="\n"/></ExprList></WriteOp><CallProcStatOp><Id name="menu"/></CallProcStatOp></BodyOp></IterStmts></WhileOp><WriteOp><ExprList><StringConst const="Uscita.\n"/></ExprList></WriteOp></BodyOp></ProcBodyOp></ProcOp></Procs></ProgramOp>